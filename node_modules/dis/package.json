{
  "name": "dis",
  "version": "0.2.1",
  "description": "Tiny tiny duck typing utility",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/yelo-npm/is.git"
  },
  "keywords": [
    "duck",
    "introspection"
  ],
  "author": {
    "name": "xananax@yelostudio.com"
  },
  "license": "MIT",
  "readmeFilename": "README.md",
  "readme": "# is\n\nTiny tiny Library to check object types.\nWorks in node and your browser.\n\nUse it like this:\n\n    is.object(var)\n\nOR\n\n\tis(var,\"object\")\n\nOR\n\n\tis(var, Object)\n\nall are equally valid, but note that is.object will have more checks that is(var, Object).\nYou can also do:\n\t\n\t is(var) to get it's type\n\t is(var1,var2,var3,Array) to check several variables at the same time\n\n## Installation:\n\n### In browser:\n\t\n\t<script type=\"text/javascript\" src=\"dis\"></script>\n\nor\n\n\trequire('dis',function(is){\n\t\t//...\n\t})\n\n### In node:\n\t\n\tvar is = require('dis');\n\nnote: I use \"is\" because it's shorter and more explicative. This is how I had named the plugin originally, but the name was not available on npm, so I had to revert to something else.\nthe original \"is\" plugin is available <https://github.com/onirame/is>. It's sorta similar, but has more functions, and a different API. See if you like it better.\n\n## List of functions:\n\n\t is.object(var): checks if var is a plain object\n\t is.array(var): checks if var is an array\n\t is.boolean(var): checks if var is a boolean\n\t is.function(var): checks if var is a function\n\t is.string(var): checks if var is a string\n\t is.empty(var): checks if var is defined, an empty string, an array with no length, or an empty object\n\t is.defined(var): checks if var is null or undefined\n\t is.number(var): checks if var is a number\n\t is.integer(var): checks if var is an integer\n\t is.HTMLCollection(var): checks if var is the result of a selector (browser only of course).\t\t\t\t\t   \n\t is.arguments(var): checks if var is an arguments object\n\t is.node(var): checks if var is a dom node (browser only)\n\t is.regexp(var): checks if var is a regular expression\n\t is.same(var, var...): checks if all passed variables have the same type, without specifying the type\n\t is.type(var): returns the type of var\n\t is(var): same as above\n\t is(var,type): checks if \"var\" is of type \"type\"\n\t is(var, var..., type): bundles is(var,type) and is.same. Checks if all passed vars have the same type and finally checks the type\n",
  "_id": "dis@0.2.1",
  "_from": "dis"
}
